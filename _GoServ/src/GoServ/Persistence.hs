module GoServ.Persistence (
      lookupAlias
    , addAlias
) where

import Debug.Trace

import qualified Data.Map.Strict as M
import System.IO (writeFile, readFile)
import Paths_GoServ (getDataFileName) -- autogenerated by cabal

persistenceFile :: IO FilePath
persistenceFile = getDataFileName "GoServ.aliases"

lookupAlias :: String -> IO (Maybe String)
lookupAlias key = trace "lookupAlias" $ M.lookup key <$> findOrCreateAliasMap

addAlias :: String -> String -> IO ()
addAlias key val = do
  traceIO "addAlias"
  map      <- M.insert key val <$> findOrCreateAliasMap
  saveFunc <- writeFile <$> persistenceFile
  saveFunc (show map) 

findOrCreateAliasMap :: IO (M.Map String String)
findOrCreateAliasMap = do
  storedData <- readFile =<< persistenceFile
  traceIO "findOrCreateAliasMap"
  case storedData of
    "" -> return M.empty
    _  -> return (read storedData)

